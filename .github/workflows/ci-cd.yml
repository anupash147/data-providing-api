name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  REPOSITORY: usa-names-api

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        python -m pytest test_app.py -v --cov=app --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Configure Docker for GCR
      run: |
        gcloud auth configure-docker
    
    - name: Build and push Docker image
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}:${{ github.sha }} .
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}:latest .
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}:${{ github.sha }}
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}:latest
    
    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: usa-names-api
        image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}:${{ github.sha }}
        region: ${{ env.REGION }}
        env_vars: |
          GOOGLE_CLOUD_PROJECT=${{ secrets.GCP_PROJECT_ID }}
    
    - name: Show service URL
      run: |
        gcloud run services describe usa-names-api --region=${{ env.REGION }} --format='value(status.url)' 